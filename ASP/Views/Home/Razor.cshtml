@{
    ViewData["title"] = "Razor";
    Random _rand = new Random();
}

<div class="text-center">
    <h1 class="display-4">Razor</h1>
</div>
<p>
    Razor — синтаксис для включенной в склад команды HTML C#.<br />
    Базуться на вживаемом ключе символа &commat;, из зв чего
    сам символ в HTML следует заменить на html-сущность <b>&amp;commat;</b>
</p>
<p>
    Code block: &commat; { C# code }<br />
    В разметке не отображается.
</p>

@{
    int x = _rand.Next(1, 20);
    String str = "The String";
}

<p>
    Expression (выражения) – инструкции, имеющие результат (что-то возвращают).
    Неявная (implicit) печать - <b>&commat;Expression</b><br />
    Например: &commat;x = @x <br />
    Ограничение: символ &commat; не считается активным в воспринимаемых буквах
    как электронная почта: str-length@str.Length <br />
    Выражение считается завершенным если далее следует тег, при этом Generic также
    воспринимается как тег: &commat;List&lt;int><br />
    Также выражение может быть ограничено пробелами или другими знаками разрешения
    x - 3 = @x - 3
</p>
<p>
    Явный синтаксис для выражений: &commat;( Выражение)<br />
    str-length@str.Length &rarr; str-length@(str.Length)<br />
    x – 3 = @x – 3 &rarr; x - 3 = @(x - 3)
</p>
<p>
    Условная верстка: &commat;if, &commat;switch<br />
    В блоках этих операторов можно использовать как инструкции C#, так и
    и разметку. Разметкой считается то, что в тегах. Другое – инструкции.
    Если следует отметить, что разметка идет без тегов, то следует добавить
    префикс &commat;:
</p>
<p>
    @if (x < 10)
    {
        int y = 20;
        <b>Этот блок будет сверстан если x &lt; 10</b>
        <i>При этом y = @y</i>
        @:конец блока
    }
    else
    {
        int y = 30;
        <b>Этот блок будет сверстан если x &ge; 10</b>
        <i>При этом y = @y</i>
        @:конец блока
    }
</p>
<p>
    @switch (x)
    {
        case 1:
            <i>case x = 1</i>
            break;
        case 10:
            <i>case x = 10</i>
            break;
        default:
            <i>Default метка</i>
            break;
    }
</p>
<p>
    Цикловые операторы &commat;for, &commat;foreach и т.д.<br />
    то же самое - возможность "смешивания" кода и разметки
</p>
<div>
    @for (int i = 0; i < @x; i++)
    {
        <p>@(i + 1). Позиция с i = @i;</p>
    }
</div>

@{
    int[] arr = { 9, 7, 5, 3, 1 };
}

<ul>
    @foreach (int item in arr)
    {
        String txt = $"item value = {item}";

        <li>@txt</li>
    }
</ul>